/* Basic reset and box-sizing */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Roboto', sans-serif; /* Using Roboto as a common M3 font */
    transition: background-color 0.3s ease, color 0.3s ease; /* Smooth transition for theme change */
    display: flex;
    flex-direction: column;
    height: 100vh; /* Use height: 100vh to fill the viewport */
    overflow: hidden; /* Prevent body scrolling */
}

/* Material 3 inspired color variables */
:root {
    /* Light mode colors */
    --md-sys-color-primary-light: #6750A4;
    --md-sys-color-on-primary-light: #FFFFFF;
    --md-sys-color-surface-light: #FFFBFF; /* Very faint background */
    --md-sys-color-on-surface-light: #1C1B1F; /* Black text */
    --md-sys-color-surface-container-low-light: #F7F2F7; /* Slightly darker surface for elements */

    /* Dark mode colors */
    --md-sys-color-primary-dark: #D0BCFF;
    --md-sys-color-on-primary-dark: #381E72;
    --md-sys-color-surface-dark: #000000; /* Completely black background */
    --md-sys-color-on-surface-dark: #E6E1E5; /* Light text */
    --md-sys-color-surface-container-low-dark: #1C1B1F; /* Slightly lighter surface for elements */

    /* Common shapes - using border-radius */
    --md-sys-shape-corner-extra-large: 28px;
    --md-sys-shape-corner-large: 16px;
    --md-sys-shape-corner-medium: 12px;
    --md-sys-shape-corner-small: 8px;
}

/* Apply theme colors based on body class */
body.light-mode {
    background-color: var(--md-sys-color-surface-light);
    color: var(--md-sys-color-on-surface-light);
}

body.dark-mode {
    background-color: var(--md-sys-color-surface-dark);
    color: var(--md-sys-color-on-surface-dark);
}

.container {
    flex-grow: 1; /* Allow container to fill available space */
    display: flex;
    flex-direction: column;
    padding: 16px; /* Sufficient padding */
    position: relative; /* Needed for floating elements positioning context */
    overflow: hidden; /* Prevent container scrolling */
    height: 100%; /* Ensure container takes full height of body */
}

#note-area {
    flex-grow: 1; /* Text area takes remaining space */
    border: none;
    outline: none;
    resize: none; /* Prevent manual resizing */
    font-size: 1rem;
    line-height: 1.5;
    padding: 0; /* Padding is on the container */
    background-color: transparent; /* Make textarea background transparent to show body background */
    color: inherit; /* Inherit text color from body */
    overflow-y: auto; /* Allow text area to scroll its content */
    /* Default padding-bottom to make space for controls when keyboard is NOT up */
    padding-bottom: 80px; /* Adjust based on controls height + desired spacing */
}

/* Style for the container holding floating elements */
.controls-container {
    position: fixed; /* Fixed position relative to the viewport */
    /* Default bottom position when keyboard is NOT up */
    bottom: 16px; /* Distance from the bottom of the viewport */
    z-index: 10; /* Ensure it stays on top */
    display: flex;
    justify-content: space-between; /* Space out word count and buttons */
    align-items: center;
    pointer-events: none; /* Allow clicks to pass through this container */
    padding: 0 16px; /* Add horizontal padding here */
    padding-bottom: env(safe-area-inset-bottom); /* Account for notch/safe areas below controls */
    width: 100%; /* Ensure container spans full width to position elements */
    box-sizing: border-box; /* Include padding in the element's total width and height */
    /* Add a slight transition for smoother movement when keyboard appears/disappears */
    transition: bottom 0.3s ease;
}

.floating-element {
    pointer-events: auto; /* Re-enable pointer events for the element itself */
    padding: 8px 12px;
    border-radius: var(--md-sys-shape-corner-large); /* Rounded corners */
    background-color: var(--md-sys-color-surface-container-low-light); /* Use a surface color */
    color: var(--md-sys-color-on-surface-light); /* Use on-surface color */
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2); /* Subtle shadow */
    transition: background-color 0.3s ease, color 0.3s ease;
}

.dark-mode .floating-element {
    background-color: var(--md-sys-color-surface-container-low-dark);
    color: var(--md-sys-color-on-surface-dark);
}


.floating-buttons {
     display: flex;
     gap: 8px; /* Space between buttons */
     pointer-events: auto; /* Re-enable pointer events for buttons */
}


.floating-button {
    width: 56px; /* Standard FAB size */
    height: 56px; /* Standard FAB size */
    border-radius: 50%; /* Circular shape */
    border: none;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.2); /* More prominent shadow for buttons */
    transition: background-color 0.3s ease, color 0.3s ease, transform 0.1s ease;
    /* Material 3 Primary color for buttons */
    background-color: var(--md-sys-color-primary-light);
    color: var(--md-sys-color-on-primary-light); /* On primary color for icon */
}

.dark-mode .floating-button {
    background-color: var(--md-sys-color-primary-dark);
    color: var(--md-sys-color-on-primary-dark);
}

.floating-button:active {
    transform: scale(0.95); /* Slight press effect */
}

.material-icons {
    font-size: 24px; /* Standard icon size */
}

/* Basic responsiveness for larger screens - adjust padding */
@media (min-width: 600px) {
    .container {
        padding: 24px;
    }
     .controls-container {
        padding: 0 24px; /* Adjust horizontal padding */
        bottom: 24px; /* Adjust default bottom position */
         padding-bottom: env(safe-area-inset-bottom); /* Account for safe areas */
    }
     #note-area {
         padding-bottom: 100px; /* Adjust default padding-bottom for larger screens */
     }
}
